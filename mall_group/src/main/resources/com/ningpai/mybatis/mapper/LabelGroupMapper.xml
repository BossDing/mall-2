<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ningpai.dao.LabelGroupMapper" >
  <resultMap id="BaseResultMap" type="com.ningpai.group.bean.LabelGroup" >
    <id column="label_group_id" property="labelGroupId" jdbcType="BIGINT" />
    <result column="group_label_id" property="groupLabelId" jdbcType="BIGINT" />
    <result column="group_type_id" property="groupTypeId" jdbcType="BIGINT" />
    <result column="group_id" property="groupId" jdbcType="BIGINT" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="modify_time" property="modifyTime" jdbcType="TIMESTAMP" />
    <result column="del_flag" property="delFlag" jdbcType="CHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    label_group_id, group_label_id, group_id, create_time, modify_time, del_flag,group_type_id
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from np_label_group
    where label_group_id = #{labelGroupId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from np_label_group
    where label_group_id = #{labelGroupId,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.ningpai.group.bean.LabelGroup" useGeneratedKeys="true" keyProperty="labelGroupId" >
    insert into np_label_group (group_label_id, group_id, create_time, 
      modify_time, del_flag,group_type_id)
    values (#{groupLabelId,jdbcType=BIGINT}, #{groupId,jdbcType=BIGINT}, #{createTime,jdbcType=TIMESTAMP}, 
      #{modifyTime,jdbcType=TIMESTAMP}, #{delFlag,jdbcType=CHAR},#{groupTypeId,jdbcType=BIGINT})
  </insert>
  <insert id="insertSelective" parameterType="com.ningpai.group.bean.LabelGroup" useGeneratedKeys="true" keyProperty="labelGroupId" >
    insert into np_label_group
    <trim prefix="(" suffix=")" suffixOverrides="," >
      group_label_id,
      group_id,
      create_time,
      modify_time,
      del_flag,
      group_type_id,
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      #{groupLabelId,jdbcType=BIGINT},
      #{groupId,jdbcType=BIGINT},
      #{createTime,jdbcType=TIMESTAMP},
      #{modifyTime,jdbcType=TIMESTAMP},
      #{delFlag,jdbcType=CHAR},
      #{groupTypeId,jdbcType=BIGINT},
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.ningpai.group.bean.LabelGroup" >
    update np_label_group
    <set >
      <if test="groupLabelId != null" >
        group_label_id = #{groupLabelId,jdbcType=BIGINT},
      </if>
      <if test="groupTypeId != null" >
        group_type_id = #{groupTypeId,jdbcType=BIGINT},
      </if>
      <if test="groupId != null" >
        group_id = #{groupId,jdbcType=BIGINT},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyTime != null" >
        modify_time = #{modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="delFlag != null" >
        del_flag = #{delFlag,jdbcType=CHAR},
      </if>
    </set>
    where label_group_id = #{labelGroupId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ningpai.group.bean.LabelGroup" >
    update np_label_group
    set group_label_id = #{groupLabelId,jdbcType=BIGINT},
      group_id = #{groupId,jdbcType=BIGINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      modify_time = #{modifyTime,jdbcType=TIMESTAMP},
      del_flag = #{delFlag,jdbcType=CHAR},
      group_type_id = #{groupTypeId,jdbcType=BIGINT}
    where label_group_id = #{labelGroupId,jdbcType=BIGINT}
  </update>
  
  <!-- 删除小组标签级联 -->
  <update id="deleteByGroupId" parameterType="java.lang.Long">
    update np_label_group
    set  del_flag = '1'
    where group_id = #{groupId,jdbcType=BIGINT}
  </update>
  
  <!-- 根据小组标签Id查询小组 -->
  <select id="selectByLabelId"  parameterType="java.util.Map" resultMap="BaseResultMap">
   select  g.group_id, g.group_name,g.group_head, g.group_remark, g.group_create_author_id, g.group_secret, g.group_dissolve,      
	 g.group_check_flag, g.group_is_hot,group_is_active, g.group_status,g.group_limit_member, groupmember,topic_count,
    npc.customer_nickname,npc.customer_img,type.group_type_name,l.group_label_id
   from np_label_group l
   left join np_group_type type 
   on l.group_type_id = type.group_type_id 
   left join np_group g 
   on l.group_id= g.group_id
   left join np_group_label label 
   on l.group_label_id = label.group_label_id
   left join
     (select ngc.customer_id,ngc.group_id,nc.customer_nickname,nc.customer_img 
     from np_group_customer ngc left join np_customer nc on ngc.customer_id = nc.customer_id where ngc.customer_power='2' and ngc.del_flag='0')npc
     on g.group_id = npc.group_id 
    left join 
     (SELECT group_id, COUNT(*) topic_count FROM np_group_topic WHERE topic_del_flag ='0' GROUP BY group_id)tp
     on tp.group_id = g.group_id
   left join 
     (select group_id, count(*) groupmember from np_group_customer where 1=1 
     and del_flag='0' group by group_id)gcm
     on l.group_id = gcm.group_id
   where 1=1 and g.group_dissolve = '0' and g.group_check_flag='1' and g.group_secret='1'
     <if test="groupLabelIds != null and groupLabelIds != '' ">
       and g.group_label_id in(#{groupLabelIds})
     </if>
     <if test="groupTypeId != null and groupTypeId != '' ">
      and g.group_type_id=#{groupTypeId}
     </if>
       <if test="sort != null">
		<choose>
			<when test="sort == ''">
				order by groupmember  DESC
			</when>
			<when test="sort == 1">
				order by topic_count DESC
			</when>
			<when test="sort == 2">
				order by group_create_time DESC
			</when>
			<when test="sort == 3">
				order by group_create_time 
			</when>
		</choose>
		</if>
		<if test="sort == null">
		    order by groupmember DESC
		</if>
	  limit #{startRowNum},#{endRowNum}
  </select>
  
  <!-- 根据小组标签Id查询小组 数目-->
  <select id="selectByLabelIdCount"  parameterType="java.util.Map" resultType="java.lang.Integer">
   select count(1)
   from np_label_group l
   left join np_group_type type 
   on l.group_type_id = type.group_type_id 
   left join np_group g 
   on l.group_id= g.group_id
   left join np_group_label label 
   on l.group_label_id = label.group_label_id
   where 1=1 and g.group_dissolve = '0' and g.group_secret='1' and g.group_check_flag='1'
     <if test="groupLabelIds != null and groupLabelIds != '' ">
      and g.group_label_id in(#{groupLabelIds})
     </if>
     <if test="groupTypeId != null and groupTypeId != '' ">
      and g.group_type_id=#{groupTypeId}
     </if>
  </select>
</mapper>